"""
Django settings for Atlas project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g(e5k*87x$q^qn12=++^dm6_12pvw^n_fqy*f2(a+#dzcn+5n^'

# SECURITY WARNING: don't run with debug turned on in production!

#DEBUG = False

# ALLOWED_HOSTS = ['goatlas.ru', 'www.goatlas.ru', 'localhost', '127.0.0.1', "jointly-confirmed-perch.cloudpub.ru"]
ALLOWED_HOSTS = ['goatlas.ru', 'www.goatlas.ru']

CSRF_TRUSTED_ORIGINS = [
    'https://jointly-confirmed-perch.cloudpub.ru',
    # если у вас ещё http-тесты — можно указать 'http://…'
]

AUTH_USER_MODEL = 'routes.CustomUser'

# Настройки сессий
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Сессии сохраняются в базе данных
SESSION_COOKIE_NAME = 'sessionid'  # Имя cookie сессии
# сколько секунд жить сессионной куке (по умолчанию 2 недели = 1209600 сек.)
SESSION_COOKIE_AGE = 60 * 60 * 24 * 30    # 30 дней

# продлять жизнь сессии при каждом запросе
SESSION_SAVE_EVERY_REQUEST = True

# если True, то сессия завершается при закрытии браузера,
# если False — живёт до отработки COOKIE_AGE
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

# Application definition

CSRF_COOKIE_NAME = "csrftoken"  # Убедитесь, что это название соответствует тому, что вы используете
CSRF_COOKIE_HTTPONLY = False  # Чтобы токен был доступен для JavaScript

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'main',
    'survey',
    'routes',
    'places',
    "payments"
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'debug_toolbar.middleware.DebugToolbarMiddleware',
]

LOGOUT_REDIRECT_URL = '/'

ROOT_URLCONF = 'Atlas.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates']
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'Atlas.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'davrr5cr_mysql',
        'USER': 'davrr5cr_mysql',
        'PASSWORD': 'Ruslan2005',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }
# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "static"  # Указывает на вашу корневую static-папку
]

MEDIA_URL = 'media/'

MEDIA_ROOT = BASE_DIR / "media"

YANDEX_OAUTH_TOKEN = "y0_AgAAAAAsA27kAATuwQAAAAEcoGZNAAAZ2bVqhehPe67on8fEWv3T9Av5hw"
YOOKASSA_SHOP_ID = "1090100"
YOOKASSA_API_KEY = "test_BBx9nQV5pqyPKmf4WjsGDta7yUsnzyZKQ9cAHY0kYvc"
FOLDER_ID = "b1gspfv2o3g5um6ak5n5"

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'unique-snowflake',
    }
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '[{asctime}] {levelname} {name}: {message}',
            'style': '{',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': BASE_DIR / 'log.txt',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

